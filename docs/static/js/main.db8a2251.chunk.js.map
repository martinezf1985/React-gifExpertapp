{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/GetGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","GetGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAC3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,MAQhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAlBhB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,a,QCNdG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEnC,OACE,sBAAKC,UAAU,0CAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,EAAL,W,uBCPOK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,mGACmFO,UACtGF,IAFmB,SAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVjB,kBAcdY,GAdc,4CAAH,sDCgCLM,EA3BC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEjB,ECJ0B,SAACA,GAC3B,MAA0BpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACT,GACtBU,QAAQC,IAAIX,GACZO,EAAS,CACPV,KAAMG,EACNK,SAAS,SAGZ,CAACd,IAEGe,EDZ2BM,CAAarB,GAAjCW,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QAStB,OAPAK,QAAQC,IAAIN,GAQV,qCACE,oBAAIlB,UAAW,yCAAf,SAA0DI,IAEzDc,GACC,mBAAGlB,UAAU,wCAAb,sBAGF,qBAAKA,UAAU,YAAf,SACGe,EAAOH,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEtBnBY,EAAe,WAC1B,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAKA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACI4C,EAAWf,KAAI,SAAAR,GAAQ,OACvB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCZfwB,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.db8a2251.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    // console.log(e.target.value);\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(inputValue.trim().length > 2){\r\n      setCategories(cats=>[inputValue, ...cats]);\r\n      setInputValue('');\r\n\r\n\r\n    }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n \r\nAddCategory.propTypes ={\r\n  setCategories: PropTypes.func.isRequired\r\n}","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  \r\n  return (\r\n    <div className='card animate__animated animate__fadeIn '>\r\n      <img src={url} alt={title} />\r\n      <p> {title} </p>\r\n    </div>\r\n  );\r\n};\r\n","export const GetGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&api_key=dEmhNP4LiC5o6zXaKrvQdJNV9GgUrglH&q=${encodeURI(\r\n    category\r\n  )}`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  // const [images, setImages] = useState([]);\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  console.log(loading);\r\n\r\n  // useEffect(() => {\r\n  //   GetGifs(category)\r\n  //   .then(setImages);\r\n  // }, []);\r\n\r\n  return (\r\n    <>\r\n      <h3 className={\"card animate__animated animate__fadeIn\"}>{category}</h3>\r\n\r\n      {loading && (\r\n        <p className=\"card animate__animated animate__flash\">loadinig</p>\r\n      )}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { GetGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    GetGifs(category).then((img) => {\r\n      console.log(img);\r\n      setstate({\r\n        data: img,\r\n        loading: false\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state; //{data:[], loading:true};\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport GifGrid from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"One punch\"]);\r\n  // const handLeadd= ()=>{\r\n  //    setCategories([...categories, 'HunterXHunter'])\r\n\r\n  // }\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        { categories.map(category => (\r\n          <GifGrid \r\n          key={category}\r\n          category ={category}\r\n          />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { GifExpertApp } from \"./GifExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}